let t,e,s,i,r,n=!1;const h=[8,12,16,36,64],l=new Map([[8,0],[12,1],[16,2],[36,3],[64,4]]),a=new Map,o=new Map;let m=8;async function p({wasm:h="",simdWasm:l="",noSIMD:a=!1}={}){window.FinalizationRegistry&&(n=!0);try{t=await WebAssembly.instantiateStreaming(fetch(a?h:l)),console.info(a?"not using simd":"using simd")}catch(e){t=await WebAssembly.instantiateStreaming(fetch(h)),console.info("not using simd")}finally{e=t.instance.exports,s=e.memory,i=s.buffer,r=e.__heap_base.value}}function _(t){let e=0;const n=h.length;if(a.size){let s=l.get(t),i=a.get(h[s]);for(;s<n&&(!i||!i.length);)s++,i=a.get(h[s]);if(s!==n){const t=h[s];return e=a.get(t).pop(),o.set(e,t),e}}return r+t>i.byteLength&&(s.grow(m*=2),i=s.buffer),e=r,r+=t,o.set(e,t),e}function u(t){if(o.has(t)){const e=o.get(t);a.has(e)?a.get(e).push(t):a.set(e,[t]),o.delete(t)}}const c=new FinalizationRegistry((t=>{u(t)}));class y{__init(){this.isMatrix4=!0}__init2(){this._disposed=!1}constructor(){y.prototype.__init.call(this),y.prototype.__init2.call(this),this.ptr=_(64),this._elements=new Float32Array(i,this.ptr,16),this.identity(),c.register(this,this.ptr)}multiply(t){return e.matrix4_multiply(this.ptr,t.ptr,this.ptr),this}premultiply(t){return e.matrix4_multiply(t.ptr,this.ptr,this.ptr),this}multiplyMatrices(t,s){return e.matrix4_multiply(t.ptr,s.ptr,this.ptr),this}multiplyScalar(t){return e.matrix4_multiply_scalar(this.ptr,t),this}determinant(){return e.matrix4_determinant(this.ptr)}transpose(){return e.matrix4_transpose(this.ptr),this}invert(){return e.matrix4_invert(this.ptr),this}invertTransform(){return e.matrix4_invert_transform(this.ptr),this}scale(t){return e.matrix4_scale(this.ptr,t.ptr),this}lookAt(t,e,s){}equals(t){const e=this.elements,s=t.elements;for(let t=0;t<16;t++)if(e[t]!==s[t])return!1;return!0}get elements(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,16)),this._elements}set(t,e,s,i,r,n,h,l,a,o,m,p,_,u,c,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=s,g[12]=i,g[1]=r,g[5]=n,g[9]=h,g[13]=l,g[2]=a,g[6]=o,g[10]=m,g[14]=p,g[3]=_,g[7]=u,g[11]=c,g[15]=y,this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}setPosition(t,e,s){const i=this.elements;return i[12]=t,i[13]=e,i[14]=s,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new y).fromArray(this.elements)}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],e[9]=s[9],e[10]=s[10],e[11]=s[11],e[12]=s[12],e[13]=s[13],e[14]=s[14],e[15]=s[15],this}copyPosition(t){const e=this.elements,s=t.elements;return e[12]=s[12],e[13]=s[13],e[14]=s[14],this}fromArray(t,e=0){const s=this.elements;for(let i=0;i<16;i++)s[i]=t[i+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t[e+9]=s[9],t[e+10]=s[10],t[e+11]=s[11],t[e+12]=s[12],t[e+13]=s[13],t[e+14]=s[14],t[e+15]=s[15],t}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,s,i))}extractBasis(t,e,s){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,e,s){return this.set(t.x,e.x,s.x,0,t.y,e.y,s.y,0,t.z,e.z,s.z,0,0,0,0,1),this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,s=t.x,i=t.y,r=t.z,n=Math.cos(s),h=Math.sin(s),l=Math.cos(i),a=Math.sin(i),o=Math.cos(r),m=Math.sin(r);if("XYZ"===t.order){const t=n*o,s=n*m,i=h*o,r=h*m;e[0]=l*o,e[4]=-l*m,e[8]=a,e[1]=s+i*a,e[5]=t-r*a,e[9]=-h*l,e[2]=r-t*a,e[6]=i+s*a,e[10]=n*l}else if("YXZ"===t.order){const t=l*o,s=l*m,i=a*o,r=a*m;e[0]=t+r*h,e[4]=i*h-s,e[8]=n*a,e[1]=n*m,e[5]=n*o,e[9]=-h,e[2]=s*h-i,e[6]=r+t*h,e[10]=n*l}else if("ZXY"===t.order){const t=l*o,s=l*m,i=a*o,r=a*m;e[0]=t-r*h,e[4]=-n*m,e[8]=i+s*h,e[1]=s+i*h,e[5]=n*o,e[9]=r-t*h,e[2]=-n*a,e[6]=h,e[10]=n*l}else if("ZYX"===t.order){const t=n*o,s=n*m,i=h*o,r=h*m;e[0]=l*o,e[4]=i*a-s,e[8]=t*a+r,e[1]=l*m,e[5]=r*a+t,e[9]=s*a-i,e[2]=-a,e[6]=h*l,e[10]=n*l}else if("YZX"===t.order){const t=n*l,s=n*a,i=h*l,r=h*a;e[0]=l*o,e[4]=r-t*m,e[8]=i*m+s,e[1]=m,e[5]=n*o,e[9]=-h*o,e[2]=-a*o,e[6]=s*m+i,e[10]=t-r*m}else if("XZY"===t.order){const t=n*l,s=n*a,i=h*l,r=h*a;e[0]=l*o,e[4]=-m,e[8]=a*o,e[1]=t*m+r,e[5]=n*o,e[9]=s*m-i,e[2]=i*m-s,e[6]=h*o,e[10]=r*m+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){}makeTranslation(t,e,s){return this.set(1,0,0,t,0,1,0,e,0,0,1,s,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const s=Math.cos(e),i=Math.sin(e),r=1-s,n=t.x,h=t.y,l=t.z,a=r*n,o=r*h;return this.set(a*n+s,a*h-i*l,a*l+i*h,0,a*h+i*l,o*h+s,o*l-i*n,0,a*l-i*h,o*l+i*n,r*l*l+s,0,0,0,0,1),this}makeScale(t,e,s){return this.set(t,0,0,0,0,e,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,e,s,i,r,n){return this.set(1,s,r,0,t,1,n,0,e,i,1,0,0,0,0,1),this}makePerspective(t,e,s,i,r,n){const h=this.elements,l=2*r/(e-t),a=2*r/(s-i),o=(e+t)/(e-t),m=(s+i)/(s-i),p=-(n+r)/(n-r),_=-2*n*r/(n-r);return h[0]=l,h[4]=0,h[8]=o,h[12]=0,h[1]=0,h[5]=a,h[9]=m,h[13]=0,h[2]=0,h[6]=0,h[10]=p,h[14]=_,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,s,i,r,n){const h=this.elements,l=1/(e-t),a=1/(s-i),o=1/(n-r),m=(e+t)*l,p=(s+i)*a,_=(n+r)*o;return h[0]=2*l,h[4]=0,h[8]=0,h[12]=-m,h[1]=0,h[5]=2*a,h[9]=0,h[13]=-p,h[2]=0,h[6]=0,h[10]=-2*o,h[14]=-_,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}compose(t,e,s){const i=this.elements,r=e._x,n=e._y,h=e._z,l=e._w,a=r+r,o=n+n,m=h+h,p=r*a,_=r*o,u=r*m,c=n*o,y=n*m,g=h*m,x=l*a,d=l*o,w=l*m,f=s.x,F=s.y,M=s.z;return i[0]=(1-(c+g))*f,i[1]=(_+w)*f,i[2]=(u-d)*f,i[3]=0,i[4]=(_-w)*F,i[5]=(1-(p+g))*F,i[6]=(y+x)*F,i[7]=0,i[8]=(u+d)*M,i[9]=(y-x)*M,i[10]=(1-(p+c))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,s){return this}dispose(){this._disposed||(c.unregister(this),u(this.ptr),this._disposed=!0)}}class g{__init(){this.isVector3=!0}constructor(t=0,e=0,s=0){g.prototype.__init.call(this),this.ptr=_(12),this._elements=new Float32Array(i,this.ptr,3),c.register(this,this.ptr),this._elements[0]=t,this._elements[1]=e,this._elements[2]=s}get x(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[0]}get y(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[1]}get z(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[2]}set x(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[0]=t}set y(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[1]=t}set z(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,3)),this._elements[2]=t}dispose(){c.unregister(this),u(this.ptr)}}class x{__init(){this.isVector3=!0}constructor(t=0,e=0,s=0,r=1){x.prototype.__init.call(this),this.ptr=_(16),this._elements=new Float32Array(i,this.ptr,4),c.register(this,this.ptr),this._elements[0]=t,this._elements[1]=e,this._elements[2]=s,this._elements[3]=s}get x(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[0]}get y(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[1]}get z(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[2]}get w(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[3]}set x(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[0]=t}set y(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[1]=t}set z(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[2]=t}set w(t){this._elements.length||(this._elements=new Float32Array(i,this.ptr,4)),this._elements[3]=t}dispose(){c.unregister(this),u(this.ptr)}}function d(t){class s extends t{__init(){this._disposed=!1}constructor(){super(),s.prototype.__init.call(this),this.ptr=_(64),this._elements=new Float32Array(i,this.ptr,16),this.identity(),c.register(this,this.ptr)}multiply(t){return e.matrix4_multiply(this.ptr,t.ptr,this.ptr),this}multiply(t){return e.matrix4_multiply(this.ptr,t.ptr,this.ptr),this}premultiply(t){return e.matrix4_multiply(t.ptr,this.ptr,this.ptr),this}multiplyMatrices(t,s){return e.matrix4_multiply(t.ptr,s.ptr,this.ptr),this}multiplyScalar(t){return e.matrix4_multiply_scalar(this.ptr,t),this}determinant(){return e.matrix4_determinant(this.ptr)}transpose(){return e.matrix4_transpose(this.ptr),this}invert(){return e.matrix4_invert(this.ptr),this}invertTransform(){return e.matrix4_invert_transform(this.ptr),this}get elements(){return this._elements.length||(this._elements=new Float32Array(i,this.ptr,16)),this._elements}set elements(t){if(this._elements){this._elements.length||(this._elements=new Float32Array(i,this.ptr,16));for(let e=Math.min(t.length,16),s=0;s<e;s++)this._elements[s]=t[s]}}dispose(){this._disposed||(c.unregister(this),u(this.ptr),this._disposed=!0)}}return s}export{y as Matrix4,g as Vector3,x as Vector4,d as convertTHREEMatrix4,u as free,p as init,t as instanceSource,_ as malloc,n as storeDataInWasm,e as wasmExports,s as wasmMemory,i as wasmMemoryBuffer,c as wasmRegistry};
